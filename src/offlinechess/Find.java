package offlinechess;

public class Find extends javax.swing.JFrame {
    
    /** Creates new form Find */
    public Find() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        chessPanel = new ChessPanel();
        sidePanel = new javax.swing.JPanel();
        yourTime = new javax.swing.JLabel();
        theirTime = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        theirName = new javax.swing.JLabel();
        yourName = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        firstButton = new javax.swing.JButton();
        secondButton = new javax.swing.JButton();
        thirdButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        flipBoardButton = new javax.swing.JToggleButton();
        jSeparator5 = new javax.swing.JSeparator();
        rematchButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        gameHistoryPane = new javax.swing.JScrollPane();
        scrollContentPane = new javax.swing.JPanel();
        gameOutcomePanel = new javax.swing.JPanel();
        outcomeLabel4 = new javax.swing.JLabel();
        whyWinLabel4 = new javax.swing.JLabel();
        whoWinsLabel4 = new javax.swing.JLabel();
        textAreaWrapPane = new javax.swing.JScrollPane();
        moveTextArea = new javax.swing.JTextArea();
        jSeparator6 = new javax.swing.JSeparator();
        blackStatusPanel = new javax.swing.JPanel();
        whiteStatusPanel = new javax.swing.JPanel();
        infoPanel = new javax.swing.JPanel();
        middleSeparator = new javax.swing.JSeparator();
        blackName = new javax.swing.JLabel();
        whiteName = new javax.swing.JLabel();
        playingStatus = new javax.swing.JLabel();
        gameInfo = new javax.swing.JLabel();
        gameResult = new javax.swing.JLabel();
        whiteOrBlackPanel = new javax.swing.JPanel();
        speedPictureLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        blackAdvantagePane = new javax.swing.JPanel();
        whiteAdvantagePane = new javax.swing.JPanel();
        chatPanel = new javax.swing.JPanel();
        chatCheckBox = new javax.swing.JCheckBox();
        jSeparator7 = new javax.swing.JSeparator();
        textPaneWrapScrollPane = new javax.swing.JScrollPane();
        chatHistoryPane = new javax.swing.JTextPane();
        chatTextField = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Offline Chess");

        chessPanel.setBackground(new java.awt.Color(200, 200, 200));
        chessPanel.setPreferredSize(new java.awt.Dimension(535, 560));

        org.jdesktop.layout.GroupLayout chessPanelLayout = new org.jdesktop.layout.GroupLayout(chessPanel);
        chessPanel.setLayout(chessPanelLayout);
        chessPanelLayout.setHorizontalGroup(
            chessPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 535, Short.MAX_VALUE)
        );
        chessPanelLayout.setVerticalGroup(
            chessPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 560, Short.MAX_VALUE)
        );

        sidePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 203, 203), 2));
        sidePanel.setPreferredSize(new java.awt.Dimension(242, 333));

        yourTime.setFont(new java.awt.Font("Consolas", 0, 28)); // NOI18N
        yourTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yourTime.setText("01:00");
        yourTime.setMaximumSize(new java.awt.Dimension(126, 34));
        yourTime.setMinimumSize(new java.awt.Dimension(126, 34));
        yourTime.setPreferredSize(new java.awt.Dimension(126, 46));

        theirTime.setFont(new java.awt.Font("Consolas", 0, 28)); // NOI18N
        theirTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        theirTime.setText("01:00");
        theirTime.setMaximumSize(new java.awt.Dimension(126, 34));
        theirTime.setMinimumSize(new java.awt.Dimension(126, 34));
        theirTime.setPreferredSize(new java.awt.Dimension(126, 46));

        jSeparator1.setBackground(new java.awt.Color(203, 203, 203));
        jSeparator1.setForeground(new java.awt.Color(203, 203, 203));

        jSeparator2.setBackground(new java.awt.Color(203, 203, 203));
        jSeparator2.setForeground(new java.awt.Color(203, 203, 203));

        theirName.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        theirName.setText("Anonymous");

        yourName.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        yourName.setText("Anonymous");

        jSeparator3.setBackground(new java.awt.Color(225, 225, 225));
        jSeparator3.setForeground(new java.awt.Color(225, 225, 225));

        firstButton.setMaximumSize(new java.awt.Dimension(44, 33));
        firstButton.setPreferredSize(new java.awt.Dimension(44, 33));
        firstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstButtonActionPerformed(evt);
            }
        });

        secondButton.setMaximumSize(new java.awt.Dimension(44, 33));
        secondButton.setPreferredSize(new java.awt.Dimension(44, 33));
        secondButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondButtonActionPerformed(evt);
            }
        });

        thirdButton.setMaximumSize(new java.awt.Dimension(44, 33));
        thirdButton.setPreferredSize(new java.awt.Dimension(44, 33));
        thirdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirdButtonActionPerformed(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(225, 225, 225));
        jSeparator4.setForeground(new java.awt.Color(225, 225, 225));

        flipBoardButton.setPreferredSize(new java.awt.Dimension(23, 23));
        flipBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipBoardButtonActionPerformed(evt);
            }
        });

        jSeparator5.setBackground(new java.awt.Color(225, 225, 225));
        jSeparator5.setForeground(new java.awt.Color(225, 225, 225));

        rematchButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        rematchButton.setText("REMATCH");
        rematchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rematchButtonActionPerformed(evt);
            }
        });

        newGameButton.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        newGameButton.setText("New Opponent");

        gameHistoryPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        gameHistoryPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        outcomeLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        outcomeLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outcomeLabel4.setText("1-0");

        whyWinLabel4.setFont(new java.awt.Font("Verdana", 2, 10)); // NOI18N
        whyWinLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        whyWinLabel4.setText("Time out");

        whoWinsLabel4.setFont(new java.awt.Font("Verdana", 2, 10)); // NOI18N
        whoWinsLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        whoWinsLabel4.setText("White is victorious");

        org.jdesktop.layout.GroupLayout gameOutcomePanelLayout = new org.jdesktop.layout.GroupLayout(gameOutcomePanel);
        gameOutcomePanel.setLayout(gameOutcomePanelLayout);
        gameOutcomePanelLayout.setHorizontalGroup(
            gameOutcomePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(whoWinsLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, whyWinLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, outcomeLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gameOutcomePanelLayout.setVerticalGroup(
            gameOutcomePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(gameOutcomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(outcomeLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(whyWinLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(whoWinsLabel4)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textAreaWrapPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textAreaWrapPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        textAreaWrapPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        moveTextArea.setEditable(false);
        moveTextArea.setBackground(new java.awt.Color(240, 240, 240));
        moveTextArea.setColumns(19);
        moveTextArea.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        moveTextArea.setRows(5);
        textAreaWrapPane.setViewportView(moveTextArea);

        jSeparator6.setBackground(new java.awt.Color(220, 220, 220));
        jSeparator6.setForeground(new java.awt.Color(220, 220, 220));

        org.jdesktop.layout.GroupLayout scrollContentPaneLayout = new org.jdesktop.layout.GroupLayout(scrollContentPane);
        scrollContentPane.setLayout(scrollContentPaneLayout);
        scrollContentPaneLayout.setHorizontalGroup(
            scrollContentPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(gameOutcomePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(textAreaWrapPane)
            .add(jSeparator6)
        );
        scrollContentPaneLayout.setVerticalGroup(
            scrollContentPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, scrollContentPaneLayout.createSequentialGroup()
                .add(textAreaWrapPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gameOutcomePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        gameHistoryPane.setViewportView(scrollContentPane);

        blackStatusPanel.setPreferredSize(new java.awt.Dimension(20, 20));

        org.jdesktop.layout.GroupLayout blackStatusPanelLayout = new org.jdesktop.layout.GroupLayout(blackStatusPanel);
        blackStatusPanel.setLayout(blackStatusPanelLayout);
        blackStatusPanelLayout.setHorizontalGroup(
            blackStatusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );
        blackStatusPanelLayout.setVerticalGroup(
            blackStatusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );

        whiteStatusPanel.setPreferredSize(new java.awt.Dimension(20, 20));

        org.jdesktop.layout.GroupLayout whiteStatusPanelLayout = new org.jdesktop.layout.GroupLayout(whiteStatusPanel);
        whiteStatusPanel.setLayout(whiteStatusPanelLayout);
        whiteStatusPanelLayout.setHorizontalGroup(
            whiteStatusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );
        whiteStatusPanelLayout.setVerticalGroup(
            whiteStatusPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout sidePanelLayout = new org.jdesktop.layout.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator1)
            .add(jSeparator2)
            .add(jSeparator3)
            .add(jSeparator4)
            .add(jSeparator5)
            .add(rematchButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(newGameButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(sidePanelLayout.createSequentialGroup()
                .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(yourTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(theirTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 0, Short.MAX_VALUE))
            .add(gameHistoryPane)
            .add(sidePanelLayout.createSequentialGroup()
                .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sidePanelLayout.createSequentialGroup()
                        .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, sidePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .add(whiteStatusPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(yourName))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, sidePanelLayout.createSequentialGroup()
                                .add(29, 29, 29)
                                .add(firstButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(31, 31, 31)
                                .add(secondButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(31, 31, 31)
                        .add(thirdButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(sidePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(sidePanelLayout.createSequentialGroup()
                                .add(blackStatusPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(theirName))
                            .add(flipBoardButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sidePanelLayout.createSequentialGroup()
                .add(theirTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(theirName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(blackStatusPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(flipBoardButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gameHistoryPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rematchButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(newGameButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(thirdButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(secondButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(firstButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sidePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(whiteStatusPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(yourName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(yourTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        infoPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 203, 203), 2));
        infoPanel.setPreferredSize(new java.awt.Dimension(226, 99));

        middleSeparator.setBackground(new java.awt.Color(203, 203, 203));
        middleSeparator.setForeground(new java.awt.Color(203, 203, 203));

        blackName.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        blackName.setText("Anonymous");

        whiteName.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        whiteName.setText("Anonymous");

        playingStatus.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        playingStatus.setText("Playing right now");

        gameInfo.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        gameInfo.setText("1+0 • BULLET • CASUAL");

        gameResult.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        gameResult.setText("Time out • White is victorious");

        whiteOrBlackPanel.setPreferredSize(new java.awt.Dimension(24, 36));

        org.jdesktop.layout.GroupLayout whiteOrBlackPanelLayout = new org.jdesktop.layout.GroupLayout(whiteOrBlackPanel);
        whiteOrBlackPanel.setLayout(whiteOrBlackPanelLayout);
        whiteOrBlackPanelLayout.setHorizontalGroup(
            whiteOrBlackPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 28, Short.MAX_VALUE)
        );
        whiteOrBlackPanelLayout.setVerticalGroup(
            whiteOrBlackPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 44, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout infoPanelLayout = new org.jdesktop.layout.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(infoPanelLayout.createSequentialGroup()
                .add(infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(infoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(middleSeparator))
                    .add(infoPanelLayout.createSequentialGroup()
                        .add(whiteOrBlackPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(whiteName)
                            .add(blackName)
                            .add(gameResult))
                        .add(76, 76, 76)))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, infoPanelLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(speedPictureLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(gameInfo)
                    .add(playingStatus))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(infoPanelLayout.createSequentialGroup()
                        .add(gameInfo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(playingStatus))
                    .add(infoPanelLayout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(speedPictureLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(middleSeparator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(infoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(infoPanelLayout.createSequentialGroup()
                        .add(whiteName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(blackName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(gameResult))
                    .add(whiteOrBlackPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        title.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("jedchess");

        blackAdvantagePane.setPreferredSize(new java.awt.Dimension(235, 25));

        org.jdesktop.layout.GroupLayout blackAdvantagePaneLayout = new org.jdesktop.layout.GroupLayout(blackAdvantagePane);
        blackAdvantagePane.setLayout(blackAdvantagePaneLayout);
        blackAdvantagePaneLayout.setHorizontalGroup(
            blackAdvantagePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        blackAdvantagePaneLayout.setVerticalGroup(
            blackAdvantagePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 25, Short.MAX_VALUE)
        );

        whiteAdvantagePane.setPreferredSize(new java.awt.Dimension(235, 25));

        org.jdesktop.layout.GroupLayout whiteAdvantagePaneLayout = new org.jdesktop.layout.GroupLayout(whiteAdvantagePane);
        whiteAdvantagePane.setLayout(whiteAdvantagePaneLayout);
        whiteAdvantagePaneLayout.setHorizontalGroup(
            whiteAdvantagePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        whiteAdvantagePaneLayout.setVerticalGroup(
            whiteAdvantagePaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 25, Short.MAX_VALUE)
        );

        chatPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(203, 203, 203), 2));

        chatCheckBox.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        chatCheckBox.setSelected(true);
        chatCheckBox.setText("Chat room");
        chatCheckBox.setToolTipText("");

        jSeparator7.setBackground(new java.awt.Color(203, 203, 203));
        jSeparator7.setForeground(new java.awt.Color(203, 203, 203));

        textPaneWrapScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textPaneWrapScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        chatHistoryPane.setBackground(new java.awt.Color(240, 240, 240));
        chatHistoryPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        textPaneWrapScrollPane.setViewportView(chatHistoryPane);

        chatTextField.setBackground(new java.awt.Color(234, 234, 227));
        chatTextField.setText("  Login to chat");
        chatTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jSeparator8.setBackground(new java.awt.Color(203, 203, 203));
        jSeparator8.setForeground(new java.awt.Color(203, 203, 203));

        org.jdesktop.layout.GroupLayout chatPanelLayout = new org.jdesktop.layout.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jSeparator7)
            .add(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(chatCheckBox, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .add(textPaneWrapScrollPane)
            .add(jSeparator8)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, chatTextField)
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(chatCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(textPaneWrapScrollPane)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chatTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(infoPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                    .add(title, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(chatPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(chessPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(sidePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(blackAdvantagePane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(whiteAdvantagePane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(title, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(infoPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(chatPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(blackAdvantagePane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(8, 8, 8)
                        .add(sidePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(whiteAdvantagePane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, chessPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void flipBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void firstButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void secondButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void thirdButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void rematchButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Find.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Find().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JPanel blackAdvantagePane;
    private javax.swing.JLabel blackName;
    private javax.swing.JPanel blackStatusPanel;
    private javax.swing.JCheckBox chatCheckBox;
    private javax.swing.JTextPane chatHistoryPane;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JTextField chatTextField;
    private ChessPanel chessPanel;
    private javax.swing.JButton firstButton;
    private javax.swing.JToggleButton flipBoardButton;
    private javax.swing.JScrollPane gameHistoryPane;
    private javax.swing.JLabel gameInfo;
    private javax.swing.JPanel gameOutcomePanel;
    private javax.swing.JLabel gameResult;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator middleSeparator;
    private javax.swing.JTextArea moveTextArea;
    private javax.swing.JButton newGameButton;
    private javax.swing.JLabel outcomeLabel4;
    private javax.swing.JLabel playingStatus;
    private javax.swing.JButton rematchButton;
    private javax.swing.JPanel scrollContentPane;
    private javax.swing.JButton secondButton;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JLabel speedPictureLabel;
    private javax.swing.JScrollPane textAreaWrapPane;
    private javax.swing.JScrollPane textPaneWrapScrollPane;
    private javax.swing.JLabel theirName;
    private javax.swing.JLabel theirTime;
    private javax.swing.JButton thirdButton;
    private javax.swing.JLabel title;
    private javax.swing.JPanel whiteAdvantagePane;
    private javax.swing.JLabel whiteName;
    private javax.swing.JPanel whiteOrBlackPanel;
    private javax.swing.JPanel whiteStatusPanel;
    private javax.swing.JLabel whoWinsLabel4;
    private javax.swing.JLabel whyWinLabel4;
    private javax.swing.JLabel yourName;
    private javax.swing.JLabel yourTime;
    // End of variables declaration                   
    
}
